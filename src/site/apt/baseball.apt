		------------------
		Baseball players example application
		-----------------
		Nathan Hamblen
		------------------

Baseball players example application

*Description

	The DataView classes are efficient at slicing and dicing long tables. Note that Databinder does not depend on wicket-extensions and therefore can’t reference DataView directly. Instead it supplies a {{{/javadoc/net/databinder/models/DatabinderProvider.html}DatabinderProvider}} that conforms to the IDataProvider interface. As seen in this example, that's all you need to make the connection.

**Demonstration

	{{{/baseball/app} Try this application}} and find your favorite player.

*Source files

	* {{{/wsvn/Databinder/baseball/r1.0/src/main/java/example/BaseballApplication.java?op=file} BaseballApplication.java}}

	* {{{/wsvn/Databinder/baseball/r1.0/src/main/java/example/Player.java?op=file} Player.java}} — <annotated data class>

	* {{{/wsvn/Databinder/baseball/r1.0/src/main/java/example/Pager.properties?op=file} Pager.properties}} — <distinct county query>

	* {{{/wsvn/Databinder/baseball/r1.0/src/main/java/example/Pager.html?op=file} Pager.html}} — <page template>

	* {{{/wsvn/Databinder/baseball/r1.0/src/main/java/example/Pager.java?op=file} Pager.java}} — <page subclass>
	
	[]

	If you’re {{{setup-guide.html} set up}} for Databinder, {{{/releases/baseball-1.0.tar.gz} download and run}} this at home. Baseball data available from the {{{http://www.baseball1.com/statistics/}baseball archive}}.

*Projects for the reader

	[[1]] List statistics from joined tables

	[[2]] Add details page, edit functionality
	
*Next…

	This is nice, you’re thinking, but what happens when you play outside the Wicket sandbox? {{{message.html}Seamless beauty}}, that’s what!